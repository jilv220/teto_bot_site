/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { ServerRoute as ApiWebhookServerRouteImport } from './routes/api/webhook'
import { ServerRoute as ApiUsersServerRouteImport } from './routes/api/users'
import { ServerRoute as ApiUserGuildsServerRouteImport } from './routes/api/user-guilds'
import { ServerRoute as ApiTokensServerRouteImport } from './routes/api/tokens'
import { ServerRoute as ApiSystemPromptServerRouteImport } from './routes/api/system-prompt'
import { ServerRoute as ApiRecordUserMessageServerRouteImport } from './routes/api/record-user-message'
import { ServerRoute as ApiLeaderboardServerRouteImport } from './routes/api/leaderboard'
import { ServerRoute as ApiGuildsServerRouteImport } from './routes/api/guilds'
import { ServerRoute as ApiEnsureUserGuildExistsServerRouteImport } from './routes/api/ensure-user-guild-exists'
import { ServerRoute as ApiChannelsServerRouteImport } from './routes/api/channels'
import { ServerRoute as ApiUsersUserIdServerRouteImport } from './routes/api/users/$userId'
import { ServerRoute as ApiGuildsGuildIdServerRouteImport } from './routes/api/guilds/$guildId'
import { ServerRoute as ApiChannelsChannelIdServerRouteImport } from './routes/api/channels/$channelId'

const rootServerRouteImport = createServerRootRoute()

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiWebhookServerRoute = ApiWebhookServerRouteImport.update({
  id: '/api/webhook',
  path: '/api/webhook',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiUsersServerRoute = ApiUsersServerRouteImport.update({
  id: '/api/users',
  path: '/api/users',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiUserGuildsServerRoute = ApiUserGuildsServerRouteImport.update({
  id: '/api/user-guilds',
  path: '/api/user-guilds',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiTokensServerRoute = ApiTokensServerRouteImport.update({
  id: '/api/tokens',
  path: '/api/tokens',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiSystemPromptServerRoute = ApiSystemPromptServerRouteImport.update({
  id: '/api/system-prompt',
  path: '/api/system-prompt',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiRecordUserMessageServerRoute =
  ApiRecordUserMessageServerRouteImport.update({
    id: '/api/record-user-message',
    path: '/api/record-user-message',
    getParentRoute: () => rootServerRouteImport,
  } as any)
const ApiLeaderboardServerRoute = ApiLeaderboardServerRouteImport.update({
  id: '/api/leaderboard',
  path: '/api/leaderboard',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiGuildsServerRoute = ApiGuildsServerRouteImport.update({
  id: '/api/guilds',
  path: '/api/guilds',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiEnsureUserGuildExistsServerRoute =
  ApiEnsureUserGuildExistsServerRouteImport.update({
    id: '/api/ensure-user-guild-exists',
    path: '/api/ensure-user-guild-exists',
    getParentRoute: () => rootServerRouteImport,
  } as any)
const ApiChannelsServerRoute = ApiChannelsServerRouteImport.update({
  id: '/api/channels',
  path: '/api/channels',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiUsersUserIdServerRoute = ApiUsersUserIdServerRouteImport.update({
  id: '/$userId',
  path: '/$userId',
  getParentRoute: () => ApiUsersServerRoute,
} as any)
const ApiGuildsGuildIdServerRoute = ApiGuildsGuildIdServerRouteImport.update({
  id: '/$guildId',
  path: '/$guildId',
  getParentRoute: () => ApiGuildsServerRoute,
} as any)
const ApiChannelsChannelIdServerRoute =
  ApiChannelsChannelIdServerRouteImport.update({
    id: '/$channelId',
    path: '/$channelId',
    getParentRoute: () => ApiChannelsServerRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/'
  fileRoutesByTo: FileRoutesByTo
  to: '/'
  id: '__root__' | '/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
}
export interface FileServerRoutesByFullPath {
  '/api/channels': typeof ApiChannelsServerRouteWithChildren
  '/api/ensure-user-guild-exists': typeof ApiEnsureUserGuildExistsServerRoute
  '/api/guilds': typeof ApiGuildsServerRouteWithChildren
  '/api/leaderboard': typeof ApiLeaderboardServerRoute
  '/api/record-user-message': typeof ApiRecordUserMessageServerRoute
  '/api/system-prompt': typeof ApiSystemPromptServerRoute
  '/api/tokens': typeof ApiTokensServerRoute
  '/api/user-guilds': typeof ApiUserGuildsServerRoute
  '/api/users': typeof ApiUsersServerRouteWithChildren
  '/api/webhook': typeof ApiWebhookServerRoute
  '/api/channels/$channelId': typeof ApiChannelsChannelIdServerRoute
  '/api/guilds/$guildId': typeof ApiGuildsGuildIdServerRoute
  '/api/users/$userId': typeof ApiUsersUserIdServerRoute
}
export interface FileServerRoutesByTo {
  '/api/channels': typeof ApiChannelsServerRouteWithChildren
  '/api/ensure-user-guild-exists': typeof ApiEnsureUserGuildExistsServerRoute
  '/api/guilds': typeof ApiGuildsServerRouteWithChildren
  '/api/leaderboard': typeof ApiLeaderboardServerRoute
  '/api/record-user-message': typeof ApiRecordUserMessageServerRoute
  '/api/system-prompt': typeof ApiSystemPromptServerRoute
  '/api/tokens': typeof ApiTokensServerRoute
  '/api/user-guilds': typeof ApiUserGuildsServerRoute
  '/api/users': typeof ApiUsersServerRouteWithChildren
  '/api/webhook': typeof ApiWebhookServerRoute
  '/api/channels/$channelId': typeof ApiChannelsChannelIdServerRoute
  '/api/guilds/$guildId': typeof ApiGuildsGuildIdServerRoute
  '/api/users/$userId': typeof ApiUsersUserIdServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/api/channels': typeof ApiChannelsServerRouteWithChildren
  '/api/ensure-user-guild-exists': typeof ApiEnsureUserGuildExistsServerRoute
  '/api/guilds': typeof ApiGuildsServerRouteWithChildren
  '/api/leaderboard': typeof ApiLeaderboardServerRoute
  '/api/record-user-message': typeof ApiRecordUserMessageServerRoute
  '/api/system-prompt': typeof ApiSystemPromptServerRoute
  '/api/tokens': typeof ApiTokensServerRoute
  '/api/user-guilds': typeof ApiUserGuildsServerRoute
  '/api/users': typeof ApiUsersServerRouteWithChildren
  '/api/webhook': typeof ApiWebhookServerRoute
  '/api/channels/$channelId': typeof ApiChannelsChannelIdServerRoute
  '/api/guilds/$guildId': typeof ApiGuildsGuildIdServerRoute
  '/api/users/$userId': typeof ApiUsersUserIdServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths:
    | '/api/channels'
    | '/api/ensure-user-guild-exists'
    | '/api/guilds'
    | '/api/leaderboard'
    | '/api/record-user-message'
    | '/api/system-prompt'
    | '/api/tokens'
    | '/api/user-guilds'
    | '/api/users'
    | '/api/webhook'
    | '/api/channels/$channelId'
    | '/api/guilds/$guildId'
    | '/api/users/$userId'
  fileServerRoutesByTo: FileServerRoutesByTo
  to:
    | '/api/channels'
    | '/api/ensure-user-guild-exists'
    | '/api/guilds'
    | '/api/leaderboard'
    | '/api/record-user-message'
    | '/api/system-prompt'
    | '/api/tokens'
    | '/api/user-guilds'
    | '/api/users'
    | '/api/webhook'
    | '/api/channels/$channelId'
    | '/api/guilds/$guildId'
    | '/api/users/$userId'
  id:
    | '__root__'
    | '/api/channels'
    | '/api/ensure-user-guild-exists'
    | '/api/guilds'
    | '/api/leaderboard'
    | '/api/record-user-message'
    | '/api/system-prompt'
    | '/api/tokens'
    | '/api/user-guilds'
    | '/api/users'
    | '/api/webhook'
    | '/api/channels/$channelId'
    | '/api/guilds/$guildId'
    | '/api/users/$userId'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ApiChannelsServerRoute: typeof ApiChannelsServerRouteWithChildren
  ApiEnsureUserGuildExistsServerRoute: typeof ApiEnsureUserGuildExistsServerRoute
  ApiGuildsServerRoute: typeof ApiGuildsServerRouteWithChildren
  ApiLeaderboardServerRoute: typeof ApiLeaderboardServerRoute
  ApiRecordUserMessageServerRoute: typeof ApiRecordUserMessageServerRoute
  ApiSystemPromptServerRoute: typeof ApiSystemPromptServerRoute
  ApiTokensServerRoute: typeof ApiTokensServerRoute
  ApiUserGuildsServerRoute: typeof ApiUserGuildsServerRoute
  ApiUsersServerRoute: typeof ApiUsersServerRouteWithChildren
  ApiWebhookServerRoute: typeof ApiWebhookServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/api/webhook': {
      id: '/api/webhook'
      path: '/api/webhook'
      fullPath: '/api/webhook'
      preLoaderRoute: typeof ApiWebhookServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/users': {
      id: '/api/users'
      path: '/api/users'
      fullPath: '/api/users'
      preLoaderRoute: typeof ApiUsersServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/user-guilds': {
      id: '/api/user-guilds'
      path: '/api/user-guilds'
      fullPath: '/api/user-guilds'
      preLoaderRoute: typeof ApiUserGuildsServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/tokens': {
      id: '/api/tokens'
      path: '/api/tokens'
      fullPath: '/api/tokens'
      preLoaderRoute: typeof ApiTokensServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/system-prompt': {
      id: '/api/system-prompt'
      path: '/api/system-prompt'
      fullPath: '/api/system-prompt'
      preLoaderRoute: typeof ApiSystemPromptServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/record-user-message': {
      id: '/api/record-user-message'
      path: '/api/record-user-message'
      fullPath: '/api/record-user-message'
      preLoaderRoute: typeof ApiRecordUserMessageServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/leaderboard': {
      id: '/api/leaderboard'
      path: '/api/leaderboard'
      fullPath: '/api/leaderboard'
      preLoaderRoute: typeof ApiLeaderboardServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/guilds': {
      id: '/api/guilds'
      path: '/api/guilds'
      fullPath: '/api/guilds'
      preLoaderRoute: typeof ApiGuildsServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/ensure-user-guild-exists': {
      id: '/api/ensure-user-guild-exists'
      path: '/api/ensure-user-guild-exists'
      fullPath: '/api/ensure-user-guild-exists'
      preLoaderRoute: typeof ApiEnsureUserGuildExistsServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/channels': {
      id: '/api/channels'
      path: '/api/channels'
      fullPath: '/api/channels'
      preLoaderRoute: typeof ApiChannelsServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/users/$userId': {
      id: '/api/users/$userId'
      path: '/$userId'
      fullPath: '/api/users/$userId'
      preLoaderRoute: typeof ApiUsersUserIdServerRouteImport
      parentRoute: typeof ApiUsersServerRoute
    }
    '/api/guilds/$guildId': {
      id: '/api/guilds/$guildId'
      path: '/$guildId'
      fullPath: '/api/guilds/$guildId'
      preLoaderRoute: typeof ApiGuildsGuildIdServerRouteImport
      parentRoute: typeof ApiGuildsServerRoute
    }
    '/api/channels/$channelId': {
      id: '/api/channels/$channelId'
      path: '/$channelId'
      fullPath: '/api/channels/$channelId'
      preLoaderRoute: typeof ApiChannelsChannelIdServerRouteImport
      parentRoute: typeof ApiChannelsServerRoute
    }
  }
}

interface ApiChannelsServerRouteChildren {
  ApiChannelsChannelIdServerRoute: typeof ApiChannelsChannelIdServerRoute
}

const ApiChannelsServerRouteChildren: ApiChannelsServerRouteChildren = {
  ApiChannelsChannelIdServerRoute: ApiChannelsChannelIdServerRoute,
}

const ApiChannelsServerRouteWithChildren =
  ApiChannelsServerRoute._addFileChildren(ApiChannelsServerRouteChildren)

interface ApiGuildsServerRouteChildren {
  ApiGuildsGuildIdServerRoute: typeof ApiGuildsGuildIdServerRoute
}

const ApiGuildsServerRouteChildren: ApiGuildsServerRouteChildren = {
  ApiGuildsGuildIdServerRoute: ApiGuildsGuildIdServerRoute,
}

const ApiGuildsServerRouteWithChildren = ApiGuildsServerRoute._addFileChildren(
  ApiGuildsServerRouteChildren,
)

interface ApiUsersServerRouteChildren {
  ApiUsersUserIdServerRoute: typeof ApiUsersUserIdServerRoute
}

const ApiUsersServerRouteChildren: ApiUsersServerRouteChildren = {
  ApiUsersUserIdServerRoute: ApiUsersUserIdServerRoute,
}

const ApiUsersServerRouteWithChildren = ApiUsersServerRoute._addFileChildren(
  ApiUsersServerRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiChannelsServerRoute: ApiChannelsServerRouteWithChildren,
  ApiEnsureUserGuildExistsServerRoute: ApiEnsureUserGuildExistsServerRoute,
  ApiGuildsServerRoute: ApiGuildsServerRouteWithChildren,
  ApiLeaderboardServerRoute: ApiLeaderboardServerRoute,
  ApiRecordUserMessageServerRoute: ApiRecordUserMessageServerRoute,
  ApiSystemPromptServerRoute: ApiSystemPromptServerRoute,
  ApiTokensServerRoute: ApiTokensServerRoute,
  ApiUserGuildsServerRoute: ApiUserGuildsServerRoute,
  ApiUsersServerRoute: ApiUsersServerRouteWithChildren,
  ApiWebhookServerRoute: ApiWebhookServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
